{"version":3,"sources":["mailchimp-it.js"],"names":["exports","extend","mailchimpItLoader","makeDiv","makeBox","mailchimpIt","out","i","key","arguments","length","hasOwnProperty","elType","className","content","el","document","createElement","classList","add","innerHTML","message","before","after","divBefore","divAfter","div","p","textContent","appendChild","insertBefore","loader","element","args","errorBox","elt","querySelectorAll","parameters","successMessage","successMessageBefore","successMessageAfter","successMessageClassName","errorMessageClassName","errorMessageBefore","errorMessageAfter","errorMessageTimeout","mailInputName","firstNameInputName","lastNameInputName","loaderElt","successBox","Array","prototype","forEach","call","nodeName","console","error","action","getAttribute","onsubmit","e","preventDefault","urlEncodedData","name","request","XMLHttpRequest","urlEncodedDataPairs","mailInput","querySelector","firstNameInput","lastNameInput","data","value","push","encodeURIComponent","join","replace","open","setRequestHeader","parentNode","nextSibling","remove","onload","d","JSON","parse","responseText","status","detail","window","setTimeout","send","jQuery","$","mailchimpItify","options","fn","this","selector"],"mappings":"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","file":"mailchimp-it.min.js","sourcesContent":["/**\n * Project : mailchimp-it\n * version : 1.0.0\n * description : Small AJAX Mailchimp Plugin - Turn a simple form into a Mailchimp-ready form\n * Author : Vincent Loy <vincent.loy1@gmail.com>\n */\n\n/*global window, document, XMLHttpRequest, console*/\n\n(function (exports) {\n    'use strict';\n\n    var // functions\n        extend,\n        mailchimpItLoader,\n        makeDiv,\n        makeBox,\n        mailchimpIt;\n\n    extend = function (out) {\n        var i,\n            key;\n\n        out = out || {};\n\n        for (i = 1; i < arguments.length; i += 1) {\n            if (arguments[i]) {\n                for (key in arguments[i]) {\n                    if (arguments[i].hasOwnProperty(key)) {\n                        out[key] = arguments[i][key];\n                    }\n                }\n            }\n        }\n        return out;\n    };\n\n    makeDiv = function (elType, className, content) {\n        var el = document.createElement(elType);\n        el.classList.add(className);\n        el.innerHTML = content;\n        return el;\n    };\n\n    makeBox = function (message, className, before, after) {\n        var div = document.createElement('div'),\n            divBefore,\n            divAfter,\n            p = document.createElement('p');\n\n        div.classList.add('mailchimp-it-response-box');\n        div.classList.add(className);\n\n        p.classList.add('mailchimp-it-text');\n        p.textContent = message;\n        div.appendChild(p);\n\n        if (before) {\n            divBefore = makeDiv('div', 'mailchimp-it-before-response', before);\n            div.insertBefore(divBefore, p);\n        }\n\n        if (after) {\n            divAfter = makeDiv('div', 'mailchimp-it-after-response', after);\n            div.appendChild(divAfter);\n        }\n\n        return div;\n    };\n\n    mailchimpItLoader = function (loader) {\n        var el = document.createElement('div');\n        el.classList.add('mailchimpit-loader');\n\n        if (loader) {\n            el.innerHTML = loader;\n        } else {\n            el.innerHTML =\n                '<svg class=\"mailchimp-it-spinner\" width=\"65px\" height=\"65px\" viewBox=\"0 0 66 66\" xmlns=\"http://www.w3.org/2000/svg\">' +\n                '<circle class=\"mailchimp-it-path\" fill=\"none\" stroke-width=\"6\" stroke-linecap=\"round\" cx=\"33\" cy=\"33\" r=\"30\"></circle>' +\n                '</svg>';\n        }\n\n        return el;\n    };\n\n    mailchimpIt = function (element, args) {\n\n        var elt = document.querySelectorAll(element),\n            parameters = extend({\n                successMessage: 'Thanks for subscribing !',\n                successMessageBefore: null,\n                successMessageAfter: null,\n                successMessageClassName: 'mailchimp-it-success',\n                errorMessageClassName: 'mailchimp-it-error',\n                errorMessageBefore: null,\n                errorMessageAfter: null,\n                errorMessageTimeout: 5000,\n                mailInputName: 'newsletter_mail',\n                firstNameInputName: 'newsletter_first_name',\n                lastNameInputName: 'newsletter_last_name',\n                loaderElt: null\n            }, args),\n            successBox = makeBox(\n                parameters.successMessage,\n                parameters.successMessageClassName,\n                parameters.successMessageBefore,\n                parameters.successMessageAfter\n            ),\n            loader = mailchimpItLoader(parameters.loaderElt),\n            errorBox;\n\n        Array.prototype.forEach.call(elt, function (el) {\n            if (el.nodeName !== \"FORM\") {\n                console.error('mailchimp-it only works with forms tags, you provide ' + el.nodeName, el);\n            } else {\n                // ok\n                var action = el.getAttribute('action');\n\n                el.onsubmit = function (e) {\n                    e.preventDefault();\n                    var request = new XMLHttpRequest(),\n                        urlEncodedData,\n                        urlEncodedDataPairs = [],\n                        name,\n                        mailInput = el.querySelector('input[name=' + parameters.mailInputName + ']'),\n                        firstNameInput = el.querySelector('input[name=' + parameters.firstNameInputName + ']'),\n                        lastNameInput = el.querySelector('input[name=' + parameters.lastNameInputName + ']'),\n                        data = {};\n\n                    if (mailInput) {\n                        data[parameters.mailInputName] = mailInput.value;\n                    }\n\n                    if (firstNameInput) {\n                        data[parameters.firstNameInputName] = firstNameInput.value;\n                    }\n\n                    if (lastNameInput) {\n                        data[parameters.lastNameInputName] = lastNameInput.value;\n                    }\n\n                    for (name in data) {\n                        if (data.hasOwnProperty(name)) {\n                            urlEncodedDataPairs.push(encodeURIComponent(name) + '=' + encodeURIComponent(data[name]));\n                        }\n                    }\n\n                    urlEncodedData = urlEncodedDataPairs.join('&').replace(/%20/g, '+');\n\n                    request.open('POST', action, true);\n                    request.setRequestHeader('Content-Type', 'application/x-www-form-urlencoded');\n                    //TODO : Check if loaderElt is string, then put it in a Node elt\n                    el.parentNode.insertBefore(loader, el.nextSibling);\n                    el.remove();\n\n                    request.onload = function () {\n                        var d = JSON.parse(request.responseText);\n\n                        if (request.status >= 200 && request.status < 400 && d.status === 'subscribed') {\n\n                            loader.parentNode.insertBefore(successBox, loader.nextSibling);\n                            loader.remove();\n\n                        } else {\n\n                            errorBox = makeBox(\n                                d.detail,\n                                parameters.errorMessageClassName,\n                                parameters.errorMessageBefore,\n                                parameters.errorMessageAfter\n                            );\n\n                            loader.parentNode.insertBefore(errorBox, loader.nextSibling);\n                            loader.remove();\n\n                            window.setTimeout(function () {\n                                errorBox.parentNode.insertBefore(el, errorBox.nextSibling);\n                                errorBox.remove();\n                            }, parameters.errorMessageTimeout);\n                        }\n\n                    };\n\n                    request.send(urlEncodedData);\n                };\n            }\n        });\n    };\n\n    exports.mailchimpIt = mailchimpIt;\n\n}(window));\n\n/*global $, jQuery, mailchimpIt*/\nif (window.jQuery) {\n    (function ($, mailchimpIt) {\n        'use strict';\n\n        function mailchimpItify(el, options) {\n            mailchimpIt(el, options);\n        }\n\n        $.fn.mailchimpIt = function (options) {\n            return mailchimpItify(this.selector, options);\n        };\n    }(jQuery, mailchimpIt));\n}"],"sourceRoot":"/source/"}